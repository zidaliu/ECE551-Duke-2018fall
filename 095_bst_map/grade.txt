Grading at 11/07/2018:05:15:42.889151
For commit ID 88a21ca655a6aedf01eb7d25f2548ed4d67c8662
-----------------------------------------------
testcase 1 : Testing with BstMap<int,int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==18473== Memcheck, a memory error detector
==18473== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18473== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18473== Command: ./test.1
==18473== Parent PID: 18472
==18473== 
==18473== Invalid read of size 4
==18473==    at 0x10A81D: BstMap<int, int>::lookupnode(int const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.1)
==18473==    by 0x10A931: BstMap<int, int>::add(int const&, int const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.1)
==18473==    by 0x10972E: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.1)
==18473==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==18473== 
==18473== 
==18473== Process terminating with default action of signal 11 (SIGSEGV)
==18473==  Access not within mapped region at address 0x0
==18473==    at 0x10A81D: BstMap<int, int>::lookupnode(int const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.1)
==18473==    by 0x10A931: BstMap<int, int>::add(int const&, int const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.1)
==18473==    by 0x10972E: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.1)
==18473==  If you believe this happened as a result of a stack
==18473==  overflow in your program's main thread (unlikely but
==18473==  possible), you can try to increase the size of the
==18473==  main thread stack using the --main-stacksize= flag.
==18473==  The main thread stack size used in this run was 8388608.
==18473== 
==18473== HEAP SUMMARY:
==18473==     in use at exit: 16 bytes in 1 blocks
==18473==   total heap usage: 2 allocs, 1 frees, 72,720 bytes allocated
==18473== 
==18473== LEAK SUMMARY:
==18473==    definitely lost: 0 bytes in 0 blocks
==18473==    indirectly lost: 0 bytes in 0 blocks
==18473==      possibly lost: 0 bytes in 0 blocks
==18473==    still reachable: 16 bytes in 1 blocks
==18473==         suppressed: 0 bytes in 0 blocks
==18473== Reachable blocks (those to which a pointer was found) are not shown.
==18473== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18473== 
==18473== For counts of detected and suppressed errors, rerun with: -v
==18473== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 2 : Testing with BstMap<int,std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==18502== Memcheck, a memory error detector
==18502== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18502== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18502== Command: ./test.2
==18502== Parent PID: 18501
==18502== 
==18502== Invalid read of size 4
==18502==    at 0x10AA6F: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::lookupnode(int const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.2)
==18502==    by 0x10ABD3: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(int const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.2)
==18502==    by 0x1097AA: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.2)
==18502==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==18502== 
==18502== 
==18502== Process terminating with default action of signal 11 (SIGSEGV)
==18502==  Access not within mapped region at address 0x0
==18502==    at 0x10AA6F: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::lookupnode(int const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.2)
==18502==    by 0x10ABD3: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(int const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.2)
==18502==    by 0x1097AA: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.2)
==18502==  If you believe this happened as a result of a stack
==18502==  overflow in your program's main thread (unlikely but
==18502==  possible), you can try to increase the size of the
==18502==  main thread stack using the --main-stacksize= flag.
==18502==  The main thread stack size used in this run was 8388608.
==18502== 
==18502== HEAP SUMMARY:
==18502==     in use at exit: 16 bytes in 1 blocks
==18502==   total heap usage: 2 allocs, 1 frees, 72,720 bytes allocated
==18502== 
==18502== LEAK SUMMARY:
==18502==    definitely lost: 0 bytes in 0 blocks
==18502==    indirectly lost: 0 bytes in 0 blocks
==18502==      possibly lost: 0 bytes in 0 blocks
==18502==    still reachable: 16 bytes in 1 blocks
==18502==         suppressed: 0 bytes in 0 blocks
==18502== Reachable blocks (those to which a pointer was found) are not shown.
==18502== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18502== 
==18502== For counts of detected and suppressed errors, rerun with: -v
==18502== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 3 : Testing with BstMap<int,(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==18529== Memcheck, a memory error detector
==18529== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18529== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18529== Command: ./test.3
==18529== Parent PID: 18528
==18529== 
==18529== Invalid read of size 4
==18529==    at 0x10AAC9: BstMap<int, Tester>::lookupnode(int const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.3)
==18529==    by 0x10AC6B: BstMap<int, Tester>::add(int const&, Tester const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.3)
==18529==    by 0x1097AA: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.3)
==18529==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==18529== 
==18529== 
==18529== Process terminating with default action of signal 11 (SIGSEGV)
==18529==  Access not within mapped region at address 0x0
==18529==    at 0x10AAC9: BstMap<int, Tester>::lookupnode(int const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.3)
==18529==    by 0x10AC6B: BstMap<int, Tester>::add(int const&, Tester const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.3)
==18529==    by 0x1097AA: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.3)
==18529==  If you believe this happened as a result of a stack
==18529==  overflow in your program's main thread (unlikely but
==18529==  possible), you can try to increase the size of the
==18529==  main thread stack using the --main-stacksize= flag.
==18529==  The main thread stack size used in this run was 8388608.
==18529== 
==18529== HEAP SUMMARY:
==18529==     in use at exit: 16 bytes in 1 blocks
==18529==   total heap usage: 2 allocs, 1 frees, 72,720 bytes allocated
==18529== 
==18529== LEAK SUMMARY:
==18529==    definitely lost: 0 bytes in 0 blocks
==18529==    indirectly lost: 0 bytes in 0 blocks
==18529==      possibly lost: 0 bytes in 0 blocks
==18529==    still reachable: 16 bytes in 1 blocks
==18529==         suppressed: 0 bytes in 0 blocks
==18529== Reachable blocks (those to which a pointer was found) are not shown.
==18529== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18529== 
==18529== For counts of detected and suppressed errors, rerun with: -v
==18529== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 4 : Testing with BstMap<std::string,int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==18572== Memcheck, a memory error detector
==18572== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18572== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18572== Command: ./test.4
==18572== Parent PID: 18571
==18572== 
==18572== Invalid read of size 8
==18572==    at 0x4F65214: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==18572==    by 0x10A7A1: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==    by 0x10ACEA: bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==    by 0x10AB70: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::lookupnode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==    by 0x10AD6B: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==    by 0x1098FA: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==18572== 
==18572== 
==18572== Process terminating with default action of signal 11 (SIGSEGV)
==18572==  Access not within mapped region at address 0x8
==18572==    at 0x4F65214: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==18572==    by 0x10A7A1: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==    by 0x10ACEA: bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==    by 0x10AB70: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::lookupnode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==    by 0x10AD6B: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==    by 0x1098FA: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.4)
==18572==  If you believe this happened as a result of a stack
==18572==  overflow in your program's main thread (unlikely but
==18572==  possible), you can try to increase the size of the
==18572==  main thread stack using the --main-stacksize= flag.
==18572==  The main thread stack size used in this run was 8388608.
==18572== 
==18572== HEAP SUMMARY:
==18572==     in use at exit: 16 bytes in 1 blocks
==18572==   total heap usage: 2 allocs, 1 frees, 72,720 bytes allocated
==18572== 
==18572== LEAK SUMMARY:
==18572==    definitely lost: 0 bytes in 0 blocks
==18572==    indirectly lost: 0 bytes in 0 blocks
==18572==      possibly lost: 0 bytes in 0 blocks
==18572==    still reachable: 16 bytes in 1 blocks
==18572==         suppressed: 0 bytes in 0 blocks
==18572== Reachable blocks (those to which a pointer was found) are not shown.
==18572== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18572== 
==18572== For counts of detected and suppressed errors, rerun with: -v
==18572== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 5 : Testing with BstMap<std::string,std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==18599== Memcheck, a memory error detector
==18599== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18599== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18599== Command: ./test.5
==18599== Parent PID: 18598
==18599== 
==18599== Invalid read of size 8
==18599==    at 0x4F65214: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==18599==    by 0x10A9B1: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==    by 0x10AF2A: bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==    by 0x10AD80: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::lookupnode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==    by 0x10AFAB: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==    by 0x109976: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==18599== 
==18599== 
==18599== Process terminating with default action of signal 11 (SIGSEGV)
==18599==  Access not within mapped region at address 0x8
==18599==    at 0x4F65214: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==18599==    by 0x10A9B1: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==    by 0x10AF2A: bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==    by 0x10AD80: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::lookupnode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==    by 0x10AFAB: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==    by 0x109976: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.5)
==18599==  If you believe this happened as a result of a stack
==18599==  overflow in your program's main thread (unlikely but
==18599==  possible), you can try to increase the size of the
==18599==  main thread stack using the --main-stacksize= flag.
==18599==  The main thread stack size used in this run was 8388608.
==18599== 
==18599== HEAP SUMMARY:
==18599==     in use at exit: 16 bytes in 1 blocks
==18599==   total heap usage: 2 allocs, 1 frees, 72,720 bytes allocated
==18599== 
==18599== LEAK SUMMARY:
==18599==    definitely lost: 0 bytes in 0 blocks
==18599==    indirectly lost: 0 bytes in 0 blocks
==18599==      possibly lost: 0 bytes in 0 blocks
==18599==    still reachable: 16 bytes in 1 blocks
==18599==         suppressed: 0 bytes in 0 blocks
==18599== Reachable blocks (those to which a pointer was found) are not shown.
==18599== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18599== 
==18599== For counts of detected and suppressed errors, rerun with: -v
==18599== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 6 : Testing with BstMap<std::string,(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==18649== Memcheck, a memory error detector
==18649== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18649== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18649== Command: ./test.6
==18649== Parent PID: 18648
==18649== 
==18649== Invalid read of size 8
==18649==    at 0x4F65214: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==18649==    by 0x10AA0B: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==    by 0x10AF84: bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==    by 0x10ADDA: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::lookupnode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==    by 0x10B043: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Tester const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==    by 0x109976: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==18649== 
==18649== 
==18649== Process terminating with default action of signal 11 (SIGSEGV)
==18649==  Access not within mapped region at address 0x8
==18649==    at 0x4F65214: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==18649==    by 0x10AA0B: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==    by 0x10AF84: bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==    by 0x10ADDA: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::lookupnode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==    by 0x10B043: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Tester const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==    by 0x109976: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.6)
==18649==  If you believe this happened as a result of a stack
==18649==  overflow in your program's main thread (unlikely but
==18649==  possible), you can try to increase the size of the
==18649==  main thread stack using the --main-stacksize= flag.
==18649==  The main thread stack size used in this run was 8388608.
==18649== 
==18649== HEAP SUMMARY:
==18649==     in use at exit: 16 bytes in 1 blocks
==18649==   total heap usage: 2 allocs, 1 frees, 72,720 bytes allocated
==18649== 
==18649== LEAK SUMMARY:
==18649==    definitely lost: 0 bytes in 0 blocks
==18649==    indirectly lost: 0 bytes in 0 blocks
==18649==      possibly lost: 0 bytes in 0 blocks
==18649==    still reachable: 16 bytes in 1 blocks
==18649==         suppressed: 0 bytes in 0 blocks
==18649== Reachable blocks (those to which a pointer was found) are not shown.
==18649== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18649== 
==18649== For counts of detected and suppressed errors, rerun with: -v
==18649== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 7 : Testing with BstMap<(a custom class we wrote),int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==18681== Memcheck, a memory error detector
==18681== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18681== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18681== Command: ./test.7
==18681== Parent PID: 18680
==18681== 
==18681== Invalid read of size 4
==18681==    at 0x10A63E: Tester::operator==(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==    by 0x10A69A: Tester::operator!=(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==    by 0x10ABF0: BstMap<Tester, int>::lookupnode(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==    by 0x10AD71: BstMap<Tester, int>::add(Tester const&, int const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==    by 0x10986A: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==18681== 
==18681== 
==18681== Process terminating with default action of signal 11 (SIGSEGV)
==18681==  Access not within mapped region at address 0x0
==18681==    at 0x10A63E: Tester::operator==(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==    by 0x10A69A: Tester::operator!=(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==    by 0x10ABF0: BstMap<Tester, int>::lookupnode(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==    by 0x10AD71: BstMap<Tester, int>::add(Tester const&, int const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==    by 0x10986A: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.7)
==18681==  If you believe this happened as a result of a stack
==18681==  overflow in your program's main thread (unlikely but
==18681==  possible), you can try to increase the size of the
==18681==  main thread stack using the --main-stacksize= flag.
==18681==  The main thread stack size used in this run was 8388608.
==18681== 
==18681== HEAP SUMMARY:
==18681==     in use at exit: 16 bytes in 1 blocks
==18681==   total heap usage: 2 allocs, 1 frees, 72,720 bytes allocated
==18681== 
==18681== LEAK SUMMARY:
==18681==    definitely lost: 0 bytes in 0 blocks
==18681==    indirectly lost: 0 bytes in 0 blocks
==18681==      possibly lost: 0 bytes in 0 blocks
==18681==    still reachable: 16 bytes in 1 blocks
==18681==         suppressed: 0 bytes in 0 blocks
==18681== Reachable blocks (those to which a pointer was found) are not shown.
==18681== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18681== 
==18681== For counts of detected and suppressed errors, rerun with: -v
==18681== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 8 : Testing with BstMap<(a custom class we wrote),std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==18712== Memcheck, a memory error detector
==18712== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18712== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18712== Command: ./test.8
==18712== Parent PID: 18711
==18712== 
==18712== Invalid read of size 4
==18712==    at 0x10A84E: Tester::operator==(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==    by 0x10A8AA: Tester::operator!=(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==    by 0x10AE00: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::lookupnode(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==    by 0x10AFB1: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(Tester const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==    by 0x1098E6: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==18712== 
==18712== 
==18712== Process terminating with default action of signal 11 (SIGSEGV)
==18712==  Access not within mapped region at address 0x0
==18712==    at 0x10A84E: Tester::operator==(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==    by 0x10A8AA: Tester::operator!=(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==    by 0x10AE00: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::lookupnode(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==    by 0x10AFB1: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(Tester const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==    by 0x1098E6: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.8)
==18712==  If you believe this happened as a result of a stack
==18712==  overflow in your program's main thread (unlikely but
==18712==  possible), you can try to increase the size of the
==18712==  main thread stack using the --main-stacksize= flag.
==18712==  The main thread stack size used in this run was 8388608.
==18712== 
==18712== HEAP SUMMARY:
==18712==     in use at exit: 16 bytes in 1 blocks
==18712==   total heap usage: 2 allocs, 1 frees, 72,720 bytes allocated
==18712== 
==18712== LEAK SUMMARY:
==18712==    definitely lost: 0 bytes in 0 blocks
==18712==    indirectly lost: 0 bytes in 0 blocks
==18712==      possibly lost: 0 bytes in 0 blocks
==18712==    still reachable: 16 bytes in 1 blocks
==18712==         suppressed: 0 bytes in 0 blocks
==18712== Reachable blocks (those to which a pointer was found) are not shown.
==18712== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18712== 
==18712== For counts of detected and suppressed errors, rerun with: -v
==18712== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 9 : Testing with BstMap<(a custom class we wrote),(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==18755== Memcheck, a memory error detector
==18755== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18755== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18755== Command: ./test.9
==18755== Parent PID: 18754
==18755== 
==18755== Invalid read of size 4
==18755==    at 0x10A860: Tester::operator==(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==    by 0x10A8BC: Tester::operator!=(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==    by 0x10AE12: BstMap<Tester, Tester>::lookupnode(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==    by 0x10B001: BstMap<Tester, Tester>::add(Tester const&, Tester const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==    by 0x1098F8: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==18755== 
==18755== 
==18755== Process terminating with default action of signal 11 (SIGSEGV)
==18755==  Access not within mapped region at address 0x0
==18755==    at 0x10A860: Tester::operator==(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==    by 0x10A8BC: Tester::operator!=(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==    by 0x10AE12: BstMap<Tester, Tester>::lookupnode(Tester const&) const (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==    by 0x10B001: BstMap<Tester, Tester>::add(Tester const&, Tester const&) (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==    by 0x1098F8: main (in /home/ece551db/graderbase/work/zl186.095_bst_map.Kl6dJZ/test.9)
==18755==  If you believe this happened as a result of a stack
==18755==  overflow in your program's main thread (unlikely but
==18755==  possible), you can try to increase the size of the
==18755==  main thread stack using the --main-stacksize= flag.
==18755==  The main thread stack size used in this run was 8388608.
==18755== 
==18755== HEAP SUMMARY:
==18755==     in use at exit: 16 bytes in 1 blocks
==18755==   total heap usage: 2 allocs, 1 frees, 72,720 bytes allocated
==18755== 
==18755== LEAK SUMMARY:
==18755==    definitely lost: 0 bytes in 0 blocks
==18755==    indirectly lost: 0 bytes in 0 blocks
==18755==      possibly lost: 0 bytes in 0 blocks
==18755==    still reachable: 16 bytes in 1 blocks
==18755==         suppressed: 0 bytes in 0 blocks
==18755== Reachable blocks (those to which a pointer was found) are not shown.
==18755== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18755== 
==18755== For counts of detected and suppressed errors, rerun with: -v
==18755== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
